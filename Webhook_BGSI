--local HttpService = game:GetService("HttpService")
--local Players = game:GetService("Players")
--
--local webhook = "https://discord.com/api/webhooks/1363822286934900867/Jv7F4gNLDYMo3xSjn91w_HQueYHaFZt_39jHU6bTqNBWvRGVC8IuqtpUOXybOUAINNxC"
--
--local images = {
--["Emerald Golem"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/rjqq3chk.png",
--["Inferno Dragon"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/vyoknqho.png",
--["Unicorn"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/lkafikhx.png",
--["Flying Pig"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/6r00n3yw.png",
--["Lunar Serpent"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/1c1iwkpw.png",
--["Electra"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/g7ogm25v.png",
--["Dark Phoenix"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/83bbu67m.png",
--["Neon Elemental"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/t31rtsto.png",
--["NULLVoid"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/v8iefygr.png",
--["Inferno Cube"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/sv5lqk72.pngg",
--["Virus"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/4p22zxun.png",
--["Green Hydra"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/cfnapzu2.png",
--["Demonic Hydra"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/usoilccy.png",
--["The Overlord"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/qsz69ke4.png",
--["Hexarium"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/j5qzovav.png",
--["Rainbow Shock"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/x5d2o0v4.png",
--["Diamond Serpent"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/az97b4q2.png",
--["Diamond Hexarium"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/4l8x61yz.png",
--["King Pufferfish"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/t62nfvw3.png",
--["Royal Trophy"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/8abcc9wg.png",
--["DOOF"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/qrqvww74.png",
--["ROUND"] = "https://r2.e-z.host/a7854fd1-f9fa-4078-a4e3-0f21c2c731da/fm3t8q7d.png"
--}
--
--local petChances = {
--    ["Emerald Golem"] = 200,
--    ["Inferno Dragon"] = 400,
--    ["Unicorn"] = 400,
--    ["Flying Pig"] = 1000,
--    ["Lunar Serpent"] = 400,
--    ["Electra"] = 1000,
--    ["Dark Phoenix"] = 2000,
--    ["Neon Elemental"] = 5000,
--    ["NULLVoid"] = 1000000,
--    ["Inferno Cube"] = 4000,
--    ["Virus"] = 50000,
--    ["Green Hydra"] = 25000,
--    ["Demonic Hydra"] = 100000,
--    ["The Overlord"] = 50000000,
--    ["Hexarium"] = 100000,
--    ["Rainbow Shock"] = 200000,
--    ["Diamond Serpent"] = 2500,
--    ["Diamond Hexarium"] = 50000,
--    ["King Pufferfish"] = 800000,
--    ["Royal Trophy"] = 50000000,
--    ["DOOF"] = 10000,
--    ["ROUND"] = 250000
--}
--
---- Verify we have a way to make HTTP requests
--local request = (http_request or request or syn and syn.request)
--if not request then
--    warn("No HTTP request function available - webhooks disabled")
--else
--    -- Wait for the remote event
--    local remoteEvent = game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Event")
--    
--    remoteEvent.OnClientEvent:Connect(function()
--        local success, err = pcall(function()
--            local player = Players.LocalPlayer
--            if not player then return end
--            
--            local playerGui = player:FindFirstChild("PlayerGui")
--            if not playerGui then return end
--            
--            local screenGui = playerGui:FindFirstChild("ScreenGui")
--            if not screenGui then return end
--            
--            local hatching = screenGui:FindFirstChild("Hatching")
--            if not hatching then return end
--            
--            local last = hatching:FindFirstChild("Last")
--            if not last then return end
--            
--            local hatchedPets = {}
--            
--            for _, instance in pairs(last:GetChildren()) do
--                if instance:IsA("Frame") and petChances[instance.Name] then
--                    local chanceText = instance:FindFirstChild("Chance") and instance.Chance.Text or "N/A"
--                    table.insert(hatchedPets, {
--                        name = instance.Name,
--                        chance = chanceText,
--                        image = images[instance.Name] or "https://via.placeholder.com/150"
--                    })
--                end
--            end
--            
--            if #hatchedPets > 0 then
--                local embed = {
--                    title = "Hatched Pets",
--                    description = string.format("%s hatched %d pets", player.Name, #hatchedPets),
--                    color = 65280,
--                    author = {
--                        name = player.Name,
--                        icon_url = "https://www.roblox.com/headshot-thumbnail/image?userId="..player.UserId.."&width=420&height=420&format=png"
--                    },
--                    fields = {},
--                    thumbnail = {
--                        url = hatchedPets[1].image
--                    },
--                    footer = {
--                        text = os.date("%Y-%m-%d %H:%M:%S")
--                    }
--                }
--                
--                for _, pet in ipairs(hatchedPets) do
--                    table.insert(embed.fields, {
--                        name = pet.name,
--                        value = "Chance: "..pet.chance,
--                        inline = true
--                    })
--                end
--                
--                local data = {
--                    embeds = {embed},
--                    username = "Pet Hatch Logger",
--                    avatar_url = "https://i.imgur.com/6e5EhYJ.png"
--                }
--                
--                local response = request({
--                    Url = webhook,
--                    Method = "POST",
--                    Headers = {
--                        ["Content-Type"] = "application/json"
--                    },
--                    Body = HttpService:JSONEncode(data)
--                })
--                
--                if response.StatusCode ~= 200 and response.StatusCode ~= 204 then
--                    warn("Webhook failed with status:", response.StatusCode)
--                end
--            end
--        end)
--        
--        if not success then
--            warn("Error in webhook handler:", err)
--        end
--    end)
--    
--    print("Webhook system successfully initialized")
--end
--
--
loadstring(game:HttpGet("https://raw.githubusercontent.com/IdiotHub/Scripts/refs/heads/main/BGSI/main.lua"))()
