-- CONFIGURATION
local WS_URL        = "wss://8216-2a00-23c7-148c-9801-7086-a3ca-6a40-463e.ngrok-free.app/ws"
local COOLDOWN_TIME = 8 * 60  -- 8 minutes
setfpscap(30) -- reduce amount of resources being hoarded

-- SERVICES
local WebSocketService   = game:GetService("WebSocketService")
local TeleportService    = game:GetService("TeleportService")
local Players            = game:GetService("Players")
local localPlayer        = Players.LocalPlayer
local os_time            = os.time
local task_wait          = task.wait

-- STATE
local lastTeleport = 0
local isTeleporting = false

-- CONNECT
local success, socket = pcall(function()
    return WebSocketService:ConnectAsync(WS_URL)
end)
if not success or not socket then
    warn("[WebSocket] Connection failed:", socket)
    return
end
print("[WebSocket] Connected to server")

-- RESET on completion
TeleportService.TeleportCompleted:Connect(function()
    isTeleporting = false
    print("[Teleport] Completed, flag reset")
end)

-- ALSO reset on failure (GameFull)
TeleportService.TeleportInitFailed:Connect(function(player, result, message)
    if player == localPlayer and result == Enum.TeleportResult.GameFull then
        print("[Teleport] GameFull, flag reset")
        isTeleporting = false
    end
end)

-- MESSAGE HANDLER
socket.OnMessage:Connect(function(message)
    -- prevent overlap
    if isTeleporting then
        warn("[Lock] Currently teleporting, skipping message")
        return
    end

    local now = os_time()
    if now - lastTeleport < COOLDOWN_TIME then
        warn(("[Cooldown] %d seconds remaining"):format(COOLDOWN_TIME - (now - lastTeleport)))
        return
    end

    -- Now we can grab the command
    local func, err = loadstring(message)
    if not func then
        warn("[WebSocket] Invalid command:", err)
        return
    end

    -- **Lock and teleport**
    isTeleporting = true
    lastTeleport   = now
    print("[Teleport] Executing command:", message)
    func()
end)

socket.OnClose:Connect(function(code, reason)
    warn(("[WebSocket] Connection closed (%d): %s"):format(code, tostring(reason)))
end)
