-- CONFIGURATION
local WS_URL       = "wss://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/ws"
local COOLDOWN_SEC = 8 * 60  -- 8 minutes

--- SERVICES
local TeleportService = game:GetService("TeleportService")
local Players         = game:GetService("Players")
local LocalPlayer     = Players.LocalPlayer
local os_time         = os.time

-- STATE
local lastTeleport = 0
local isTeleporting = false

-- WebSocket connect (Ronix-compatible)
local connect = WebSocket and WebSocket.connect or (WebSocketService and WebSocketService.ConnectAsync)
if not connect then
    error("This executor doesn't support WebSocket connections.")
end

local ok, socket = pcall(function()
    return connect(WS_URL)
end)

if not ok or not socket then
    error("WebSocket failed to connect: " .. tostring(socket))
end

print("[WebSocket] Connected")

-- Handle GameFull error to cancel cooldown
TeleportService.TeleportInitFailed:Connect(function(player, result)
    if player == LocalPlayer and result == Enum.TeleportResult.GameFull then
        warn("[Teleport] Server full — cooldown reset")
        isTeleporting = false
        lastTeleport = 0
    end
end)

-- Message handler
socket.OnMessage:Connect(function(command)
    local now = os_time()

    if isTeleporting or (now - lastTeleport) < COOLDOWN_TIME then
        local remaining = COOLDOWN_TIME - (now - lastTeleport)
        print("[Cooldown] Ignored —", math.max(remaining, 0), "seconds left")
        return
    end

    local fn, err = loadstring(command)
    if not fn then
        warn("[WebSocket] Invalid Lua:", err)
        return
    end

    -- Run teleport
    print("[Teleport] Executing...")
    fn()
    isTeleporting = true
    lastTeleport = now
    print("[Cooldown] Engaged for", COOLDOWN_TIME, "seconds")
end)

if socket.OnClose then
    socket.OnClose:Connect(function()
        warn("[WebSocket] Connection closed.")
    end)
end
