-- CONFIG
local WS_URL       = "wss://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/ws"
local CONFIRM_URL  = "https://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/confirm"
local COOLDOWN_TIME = 8 * 60

-- SERVICES
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local localPlayer = Players.LocalPlayer
local request = http and http.request or syn and syn.request
if not request then warn("No supported HTTP library found.") return end

-- STATE
local os_time = os.time
local blockUntil = 0
local isTeleporting = false

-- Connect WebSocket
local connectFn = (WebSocket and WebSocket.connect) or (WebSocketService and WebSocketService.ConnectAsync)
if not connectFn then warn("WebSocket not supported.") return end

local ok, socket = pcall(function() return connectFn(WS_URL) end)
if not ok or not socket then warn("WebSocket connection failed.") return end
print("[WebSocket] Connected.")

-- Handlers
TeleportService.TeleportCompleted:Connect(function()
    isTeleporting = false
    print("[Teleport] Completed.")
end)

TeleportService.TeleportInitFailed:Connect(function(_, result)
    if result == Enum.TeleportResult.GameFull then
        isTeleporting = false
        print("[Teleport] Failed (GameFull) â€” will wait for new job.")
    end
end)

-- Validate job ID with server
local function confirmJobId(jobId)
    local resp = request({
        Url = CONFIRM_URL,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = HttpService:JSONEncode({ job_id = jobId })
    })
    return resp and resp.StatusCode == 200
end

-- On WebSocket Message
socket.OnMessage:Connect(function(cmd)
    if isTeleporting then return end
    local now = os_time()
    if now < blockUntil then return end

    local jobId = string.match(cmd, '"([a-f0-9%-]+)"')
    if not jobId then
        warn("No JobID found in command")
        return
    end

    local func, err = loadstring(cmd)
    if not func then
        warn("Invalid teleport command:", err)
        return
    end

    -- Confirm with server
    if confirmJobId(jobId) then
        print("[Teleport] Confirmed. Executing:", jobId)
        blockUntil = now + COOLDOWN_TIME
        isTeleporting = true
        func()
    else
        warn("[Teleport] JobID mismatch. Skipping.")
    end
end)

if socket.OnClose then
    socket.OnClose:Connect(function()
        warn("[WebSocket] Disconnected.")
    end)
end
