-- CONFIGURATION
local WS_URL = "wss://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/ws"
local PLACE_ID = 85896571713843
local COOLDOWN_TIME = 8 * 60  -- 8 minutes

-- SERVICES
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local os_time = os.time

-- STATE
local lastTeleport = 0
local isTeleporting = false

-- EXECUTOR-COMPATIBLE WEBSOCKET CONNECT
local socket
local connectFn = (WebSocket and WebSocket.connect) or (WebSocketService and WebSocketService.ConnectAsync)

if not connectFn then
    warn("[WebSocket] Not supported in this executor.")
    return
end

-- Try connection
local success, result = pcall(function()
    return connectFn(WS_URL)
end)

if not success or not result then
    warn("[WebSocket] Connection failed:", result)
    return
end

socket = result
print("[WebSocket] Connected to:", WS_URL)

-- Reset cooldown on GameFull failure
TeleportService.TeleportInitFailed:Connect(function(player, result, message)
    if player == localPlayer and result == Enum.TeleportResult.GameFull then
        warn("[Teleport Failed] Server full — resetting cooldown")
        lastTeleport = 0
        isTeleporting = false
    end
end)

-- Optional: reset lock after successful teleport (failsafe)
TeleportService.TeleportCompleted:Connect(function()
    isTeleporting = false
    print("[Teleport] Completed — cooldown active")
end)

-- Handle incoming teleport command
socket.OnMessage:Connect(function(command)
    print("[WebSocket] Received:", command)

    if isTeleporting then
        warn("[Status] Already teleporting — skipping")
        return
    end

    local now = os_time()
    if now - lastTeleport < COOLDOWN_TIME then
        warn(("[Cooldown] %d seconds remaining"):format(COOLDOWN_TIME - (now - lastTeleport)))
        return
    end

    local func, err = loadstring(command)
    if not func then
        warn("[Error] Bad command:", err)
        return
    end

    isTeleporting = true
    lastTeleport = now
    print("[Teleport] Executing...")
    func()
end)

-- On disconnect
socket.OnClose:Connect(function()
    warn("[WebSocket] Connection closed.")
end)
