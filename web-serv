-- CONFIGURATION
local NGROK_URL    = "https://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app"
local POLL_PATH    = NGROK_URL .. "/next"
local COOLDOWN_SEC = 8 * 60  -- 8 minutes

-- SERVICES
local HttpService     = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players         = game:GetService("Players")
local localPlayer     = Players.LocalPlayer

-- STATE
local lastPollTime    = 0
local cooldownUntil   = 0

-- Pick your executor’s HTTP function
local request = http and http.request or syn and syn.request
if not request then
    error("This executor has no http.request/syn.request available.")
end

-- Handle “server full” by resetting only the cooldown
TeleportService.TeleportInitFailed:Connect(function(player, result)
    if player == localPlayer and result == Enum.TeleportResult.GameFull then
        warn("[Teleport] Server full — cooldown reset")
        cooldownUntil = 0
    end
end)

print("[Executor] Starting poll loop...")

while true do
    local now = os.time()

    -- Enforce cooldown
    if now < cooldownUntil then
        local rem = cooldownUntil - now
        print(("[Cooldown] %d seconds left"):format(rem))
        task.wait(5)
        continue
    end

    -- Rate‑limit polling to every 5s
    if now - lastPollTime < 5 then
        task.wait(5 - (now - lastPollTime))
    end
    lastPollTime = now

    -- Poll the server
    local res = request({
        Url    = POLL_PATH,
        Method = "GET"
    })

    if not res or res.StatusCode ~= 200 then
        warn("[Poll] HTTP error:", res and res.StatusCode or "nil response")
        task.wait(5)
        continue
    end

    -- Decode and fetch command
    local ok, data = pcall(HttpService.JSONDecode, HttpService, res.Body)
    if not ok or type(data.command) ~= "string" then
        print("[Poll] No command available.")
        task.wait(5)
        continue
    end

    local cmd = data.command
    print("[Poll] Received command:", cmd)

    -- Compile & run teleport
    local fn, err = loadstring(cmd)
    if not fn then
        warn("[Poll] Bad command:", err)
        task.wait(5)
        continue
    end

    print("[Teleport] Executing teleport command...")
    fn()

    -- Start cooldown
    cooldownUntil = os.time() + COOLDOWN_SEC
    print(("[Teleport] Cooldown engaged for %d seconds"):format(COOLDOWN_SEC))

    -- Wait one loop so we don’t immediately re‑poll
    task.wait(5)
end
