print("BGSI X25 Auto-Teleport Initializing")

-- Universal WebSocket connection handler
local function connectWebSocket()
    local ws
    local maxAttempts = 3
    local attempt = 0
    
    while attempt < maxAttempts do
        local success, err = pcall(function()
            print("Connection attempt", attempt+1)
            
            -- Universal WebSocket initialization
            if syn and syn.websocket then
                ws = syn.websocket.connect("wss://31f9-2a00-23c7-148c-9801-b5f1-956d-18b3-969e.ngrok-free.app/ws")
            else
                ws = WebSocket.connect("wss://31f9-2a00-23c7-148c-9801-b5f1-956d-18b3-969e.ngrok-free.app/ws")
            end
            
            -- Universal message handler
            if ws.OnMessage then
                -- Standard executors (Synapse)
                ws.OnMessage:Connect(function(message)
                    processMessage(message, ws)
                end)
            elseif ws.OnData then
                -- Some custom executors
                ws.OnData:Connect(function(message)
                    processMessage(message, ws)
                end)
            else
                -- Fallback for basic executors
                ws.OnMessage = function(message)
                    processMessage(message, ws)
                end
            end
            
            -- Connection success
            ws:Send("READY")
            print("Successfully connected!")
            return ws
        end)
        
        if success then return ws end
        attempt += 1
        print("Connection failed:", err)
        task.wait(5)
    end
end

-- Universal message processor
function processMessage(message, ws)
    print("Received command:", message)
    
    if string.find(message, "TeleportToPlaceInstance") then
        local success, err = pcall(loadstring(message))
        if success then
            print("Teleport executed! Starting 8-minute cooldown...")
            for i = 1, 480 do  -- 8 minutes
                task.wait(1)
                if i % 60 == 0 then print((i/60).." minutes passed") end
            end
            ws:Send("READY")
        else
            print("Execution failed:", err)
        end
    end
end

-- Main connection handler
local ws = connectWebSocket()

-- Keep-alive system
while true do
    if ws and (ws.Connected or ws.IsConnected) then
        pcall(function() ws:Send("PING") end)
    else
        print("Reconnecting...")
        ws = connectWebSocket()
    end
    task.wait(30)
end
