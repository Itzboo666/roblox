-- Universal BGSI X25 Auto-Teleport Script
print("BGSI X25 Auto-Teleport Initializing")

-- WebSocket initialization for all executors
local websocket_api = {
    ["Synapse"] = function(url) return syn.websocket.connect(url) end,
    ["Krnl"] = function(url) return WebSocket.connect(url) end,
    ["Fluxus"] = function(url) return fluxus.websocket(url) end,
    ["Default"] = function(url) return WebSocket.connect(url) end
}

local function get_websocket(url)
    for name, func in pairs(websocket_api) do
        local success, ws = pcall(func, url)
        if success then 
            print("Using "..name.." WebSocket API")
            return ws 
        end
    end
    error("No working WebSocket API found")
end

local function process_command(message, ws)
    print("Executing:", message)
    local success, err = pcall(loadstring(message))
    if success then
        print("Teleport successful! Starting 8-minute cooldown...")
        for i = 1, 480 do
            task.wait(1)
            if i % 60 == 0 then print((i//60).." minute(s) passed") end
        end
        ws:Send("READY")
    else
        print("Error executing:", err)
    end
end

local function connect_websocket()
    local ws
    local url = "wss://763c-2a00-23c7-148c-9801-7086-a3ca-6a40-463e.ngrok-free.app/ws"
    
    while true do
        local success, err = pcall(function()
            ws = get_websocket(url)
            
            if ws.OnMessage then
                ws.OnMessage:Connect(function(m) process_command(m, ws) end)
            else
                ws.OnMessage = function(m) process_command(m, ws) end
            end
            
            ws:Send("READY")
            print("Connected to server!")
            return ws
        end)
        
        if success then return ws end
        print("Connection failed:", err)
        task.wait(5)
    end
end

-- Main execution
local ws = connect_websocket()

while true do
    if ws and (ws.Connected ~= false) then
        pcall(function() ws:Send("PING") end)
    else
        print("Reconnecting...")
        ws = connect_websocket()
    end
    task.wait(30)
end
