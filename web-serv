-- CONFIGURATION
local WS_URL        = "wss://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/ws"
local COOLDOWN_TIME = 8 * 60  -- 8 minutes

-- SERVICES
local TeleportService   = game:GetService("TeleportService")
local WebSocketService  = game:GetService("WebSocketService")
local Players           = game:GetService("Players")
local localPlayer       = Players.LocalPlayer

-- STATE
local lastTeleport = 0

-- Safe teleport helper
local function safeTeleport(jobId)
    local now = os.time()
    if now - lastTeleport < COOLDOWN_TIME then
        warn(("[Cooldown] %d seconds remaining"):format(COOLDOWN_TIME - (now - lastTeleport)))
        return
    end
    lastTeleport = now
    TeleportService:TeleportToPlaceInstance(PLACE_ID, jobId)
end

-- Connect
local success, ws = pcall(function()
    return WebSocketService:ConnectAsync(WS_URL)
end)
if not success or not ws then
    warn("[WebSocket] Connection failed:", ws)
    return
end
print("[WebSocket] Connected to server")

-- Handle incoming messages
ws.OnMessage:Connect(function(message)
    -- if it's just a raw JobID
    local jobId = message:match("([a-f0-9%-]+)")
    if jobId then
        safeTeleport(jobId)
    else
        -- otherwise treat it as runnable Lua
        local fn, err = loadstring(message)
        if fn then
            fn()
        else
            warn("[WebSocket] Bad script:", err)
        end
    end
end)

ws.OnClose:Connect(function(code, reason)
    warn(("[WebSocket] Disconnected (%d): %s"):format(code, reason or ""))
end)
