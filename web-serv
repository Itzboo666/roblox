-- CONFIG
local WS_URL        = "wss://e600-2a00-23c7-148c-9801-7438-a7df-f885-bf66.ngrok-free.app/ws"  -- update this!
local COOLDOWN_SEC  = 8 * 60  -- 8 minutes

-- SERVICES
local TeleportService   = game:GetService("TeleportService")
local Players           = game:GetService("Players")
local localPlayer       = Players.LocalPlayer
local os_time           = os.time
local task_wait         = task.wait

-- STATE
local blockUntil = 0
local onCooldown = false

-- Attempt to find a WebSocket connect function
local connect
if WebSocket and type(WebSocket.connect) == "function" then
    connect = WebSocket.connect
elseif WebSocketService and type(WebSocketService.ConnectAsync) == "function" then
    connect = function(url) return WebSocketService:ConnectAsync(url) end
else
    error("No supported WebSocket API (WebSocket.connect or WebSocketService:ConnectAsync)")
end

-- Connect once
local ok, ws = pcall(connect, WS_URL)
if not ok or not ws then
    error("[WebSocket] Connection failed: "..tostring(ws))
end
print("[WebSocket] Connected to server")

-- Reset cooldown on success or failure
TeleportService.TeleportSucceeded:Connect(function()
    onCooldown = false
    print("[Teleport] Completed — ready for next")
end)
TeleportService.TeleportInitFailed:Connect(function(player, result)
    if player == localPlayer and result == Enum.TeleportResult.GameFull then
        onCooldown = false
        print("[Teleport] Full server — ready for next")
    end
end)

-- Handle incoming commands
ws.OnMessage:Connect(function(msg)
    local now = os_time()
    if onCooldown or now < blockUntil then
        print("[Cooldown] skipping")
        return
    end

    -- Expecting msg = 'game:GetService("TeleportService"):TeleportToPlaceInstance(...)'
    local fn, err = loadstring(msg)
    if not fn then
        warn("[WebSocket] Invalid script:", err)
        return
    end

    -- Trigger teleport + cooldown
    print("[Teleport] Executing")
    fn()
    onCooldown    = true
    blockUntil    = now + COOLDOWN_SEC
end)

if ws.OnClose then
    ws.OnClose:Connect(function()
        warn("[WebSocket] Disconnected; restart script to reconnect")
    end)
end
