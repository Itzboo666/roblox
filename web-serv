-- AUTO‑EXEC TELEPORT CLIENT

-- CONFIGURATION: your ngrok tunnel WS URL
local WS_URL        = "wss://34d5-2a00-23c7-148c-9801-d03a-c5e6-1859-6c03.ngrok-free.app/ws"
local COOLDOWN_SEC  = 8 * 60  -- 8 minutes

-- SERVICES
local Players         = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local os_time         = os.time

-- STATE
local lastTeleport = 0
local busy         = false

-- EXECUTOR WS SUPPORT
local connect
if WebSocket and type(WebSocket.connect) == "function" then
    connect = WebSocket.connect
elseif WebSocketService and type(WebSocketService.ConnectAsync) == "function" then
    connect = function(url) return WebSocketService:ConnectAsync(url) end
else
    warn("[WebSocket] No supported API (WebSocket.connect or WSService:ConnectAsync).")
    return
end

-- CONNECT
local ok, socket = pcall(connect, WS_URL)
if not ok or not socket then
    warn("[WebSocket] Connection failed:", socket)
    return
end
print("[WebSocket] Connected to:", WS_URL)

-- RESET on GameFull
TeleportService.TeleportInitFailed:Connect(function(player, result)
    if player == Players.LocalPlayer and result == Enum.TeleportResult.GameFull then
        warn("[Teleport] Server full — clearing busy flag and cooldown")
        busy = false
        lastTeleport = 0
    end
end)

-- OPTIONAL: forcibly clear busy after 30s in case no TeleportCompleted event
spawn(function()
    while true do
        task.wait(30)
        if busy and os_time() - lastTeleport > COOLDOWN_SEC then
            print("[Watchdog] Clearing busy flag after timeout")
            busy = false
        end
    end
end)

-- ON MESSAGE
socket.OnMessage:Connect(function(msg)
    print("[WebSocket] Received message:", msg)
    local now = os_time()

    if busy then
        warn("[Cooldown] Busy flag set, skipping")
        return
    end
    if now - lastTeleport < COOLDOWN_SEC then
        warn(("[Cooldown] %d seconds remaining"):format(COOLDOWN_SEC - (now - lastTeleport)))
        return
    end

    -- compile & execute
    local fn, err = loadstring(msg)
    if not fn then
        warn("[WebSocket] loadstring error:", err)
        return
    end

    print("[Teleport] Executing:", msg)
    busy = true
    lastTeleport = now
    fn()
end)

-- ON CLOSE
if socket.OnClose then
    socket.OnClose:Connect(function(code, reason)
        warn(("[WebSocket] Disconnected (%s): %s"):format(tostring(code), tostring(reason)))
    end)
end
