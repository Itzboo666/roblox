local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local PlaceID = game.PlaceId

-- Configuration
local EGG_NAME = "silly-egg"
local EGG_PATH = workspace:WaitForChild("Rendered"):WaitForChild("Rifts")
local CHECK_INTERVAL = 5 -- seconds between server checks
local TELEPORT_DELAY = 3 -- seconds before teleporting
local SCRIPT_URL = "https://raw.githubusercontent.com/IdiotHub/Scripts/main/BGSI/main.lua"

-- Track visited servers to avoid repeats
local visitedServers = {}

local function findEgg()
    return EGG_PATH:FindFirstChild(EGG_NAME, true)
end

local function executeEggScript()
    local success, content = pcall(function()
        return game:HttpGet(SCRIPT_URL)
    end)
    
    if success then
        loadstring(content)()
        
        -- Wait until egg disappears
        while findEgg() do
            task.wait(1)
        end
    else
        warn("Failed to load egg script:", content)
    end
end

local function findNewServer()
    local cursor = ""
    
    repeat
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(
                "https://games.roblox.com/v1/games/" .. PlaceID .. 
                "/servers/Public?sortOrder=Asc&limit=100" .. 
                (cursor ~= "" and "&cursor=" .. cursor or "")
            ))
        end)
        
        if not success then
            warn("Failed to fetch servers:", result)
            task.wait(5)
            return nil
        end
        
        -- Find first available server we haven't visited
        for _, server in ipairs(result.data) do
            local serverId = tostring(server.id)
            if tonumber(server.maxPlayers) > tonumber(server.playing) and not visitedServers[serverId] then
                return serverId
            end
        end
        
        cursor = result.nextPageCursor or ""
    until cursor == ""
    
    return nil
end

local function serverHop()
    while true do
        -- Check for egg first
        local egg = findEgg()
        if egg then
            executeEggScript()
            -- Clear visited servers since we want fresh options after egg disappears
            table.clear(visitedServers)
        end
        
        -- Find and join a new server
        local serverId = findNewServer()
        if serverId then
            visitedServers[serverId] = true
            task.wait(TELEPORT_DELAY)
            pcall(function()
                TeleportService:TeleportToPlaceInstance(PlaceID, serverId, Players.LocalPlayer)
            end)
        end
        
        task.wait(CHECK_INTERVAL)
    end
end

-- Start the process
serverHop()
